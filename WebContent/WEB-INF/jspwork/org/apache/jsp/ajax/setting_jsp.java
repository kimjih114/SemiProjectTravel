/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2019-08-19 13:48:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ajax;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import user.model.vo.User;
import sns.model.service.SNSService;
import sns.model.vo.ProfileSNS;

public final class setting_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("user.model.vo.User");
    _jspx_imports_classes.add("sns.model.service.SNSService");
    _jspx_imports_classes.add("sns.model.vo.ProfileSNS");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	User userLoggedIn = (User) session.getAttribute("userLoggedIn");
	ProfileSNS profile = new SNSService().selectOneProfile(userLoggedIn.getUserId());
	List<String> blockLoggedInList = new SNSService().selectOneIdBlock(userLoggedIn.getUserId());

      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("table.blackList{\r\n");
      out.write("\twidth: 527px;\r\n");
      out.write("\tborder:1px solid black;\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("table.blackList td{\r\n");
      out.write("\twidth: 527px;\r\n");
      out.write("\tpadding: 8px;\r\n");
      out.write("}\r\n");
      out.write("table.blackList tr{\r\n");
      out.write("\twidth: 527px;\r\n");
      out.write("\tborder:1px solid black;\r\n");
      out.write("}\r\n");
      out.write("#setting-container {\r\n");
      out.write("\twidth: 1000px;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tleft: 220px;\r\n");
      out.write("\ttransition: 0.5s;\r\n");
      out.write("\ttop: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sectionTitle {\r\n");
      out.write("\tfont-size: 1.5em;\r\n");
      out.write("\tfont-weight: 700px;\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\t\ttext-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sectionContent {\r\n");
      out.write("\tmargin-left: 20px;\r\n");
      out.write("\tflost: left;\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#setting-container td {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("\tmarign: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header-profile-circle {\r\n");
      out.write("\tmargin-right: 5px;\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\tborder-radius: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#namePanel {\r\n");
      out.write("\tbackground: white;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#profileSection {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#namePanel {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tleft: 345px;\r\n");
      out.write("\ttop: 19px;\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("\tpadding: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".firstRow{\r\n");
      out.write("\tmargin-left: 5px;\r\n");
      out.write("\tcolor: gray;\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tdiplay:inline;\r\n");
      out.write("\tfont-size:0.8em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".firstRow .blackURL{\r\n");
      out.write("\tfont-weight: 700;\r\n");
      out.write("\tfont-size: 1.2em;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ub-btns{\r\n");
      out.write("\tdisplay:inline;\r\n");
      out.write("\tfloat:right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("var blockLoggedInList = new Array();\r\n");
      out.write("\r\n");
      out.write("$(()=>{\r\n");
      out.write("\r\n");
      out.write("\t");
if(blockLoggedInList!=null){
      out.write('\r');
      out.write('\n');
      out.write('	');
for(String id : blockLoggedInList){
      out.write("\r\n");
      out.write("\t\tblockLoggedInList.push('");
      out.print(id);
      out.write("');\r\n");
      out.write("\t");
} }
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tconsole.log(blockLoggedInList);\r\n");
      out.write("\t\r\n");
      out.write("\tvar param = {\r\n");
      out.write("\t\t\tuserBlocking : '");
      out.print(userLoggedIn.getUserId());
      out.write("'\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.print(request.getContextPath() );
      out.write("/gson/sns/blackList.do\",\r\n");
      out.write("\t\ttype:\"get\",\r\n");
      out.write("\t\tdata:param,\r\n");
      out.write("\t\tdataType:\"json\",\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t$(data).each((i,u)=>{\r\n");
      out.write("\t\t\t\tvar html = '';\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\thtml+=\"<tr>\";\r\n");
      out.write("\t\t\t\thtml+=\"<td>\";\r\n");
      out.write("\t\t\t\thtml+=\"<div class='firstRow'>\";\r\n");
      out.write("\t\t\t\thtml+=\"<img src='");
      out.print(request.getContextPath() );
      out.write("/upload/profile/\"+u.profileRenamedFilename+\"' class='header-profile-circle'  width='40' height='40' />\";\r\n");
      out.write("\t\t\t\thtml+=\"<a href='");
      out.print(request.getContextPath() );
      out.write("/story/storyMain?mypage=\"+u.profileUserId+\"' class='blackURL'>\"+u.profileUserNickname+\"</a>\";\r\n");
      out.write("\t\t\t\tif(u.profileUserType=='S'){\r\n");
      out.write("\t\t\t\t\thtml+=\"<img src='");
      out.print(request.getContextPath() );
      out.write("/img/checkmark.png' alt='''  width='20' height='20'  />\";\r\n");
      out.write("\t\t\t\t}\t\t\r\n");
      out.write("\t\t\t\thtml+=\"&nbsp;<span class='blackIntro'>@\"+u.profileUserId+\"</span>\";\r\n");
      out.write("\t\t\t\thtml+=\"</div>\"\r\n");
      out.write("\t\t\t\thtml+=\"<div class='ub-btns'>\"\r\n");
      out.write("\r\n");
      out.write("\t\t\t\thtml+=\"<div class='darkArea' style='display:inline;'><button type='button' value='\"+u.profileUserId+\"' class='btn btn-light' onclick='unblockerr(this);''>Unblock</button></div>\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\thtml+=\"</div>\";\t\r\n");
      out.write("\t\t\t\thtml+=\"</td>\";\r\n");
      out.write("\t\t\t\thtml+=\"</tr>\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#blackList\").append(html);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(jqxhr, textStatus, errorThrown){\r\n");
      out.write("\t\t\tconsole.log(\"ajax처리실패!\");\r\n");
      out.write("\t\t\tconsole.log(jqxhr, textStatus, errorThrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function unblockerr(btn){\r\n");
      out.write("\tvar param={\r\n");
      out.write("\t\t\tuserBlocking : '");
      out.print(userLoggedIn.getUserId() );
      out.write("',\r\n");
      out.write("\t\t\tuserBlocked : $(btn).val()    \t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : '");
      out.print(request.getContextPath());
      out.write("/gson/sns/unblock.do',\r\n");
      out.write("\t\t\tdata : param,\r\n");
      out.write("\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\ttype : 'post',\r\n");
      out.write("\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\tblockLoggedInList.pop($(btn).val());\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(btn).parent().parent().parent().remove();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(data){\r\n");
      out.write("\t\t\t\tconsole.log(\"ajax처리실패\");\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(data){\r\n");
      out.write("\t\t\t\tblockLoggedInList = [];\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}) \r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function headerTextModify(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar headertext = $(\"#SmodifyText\").val();\r\n");
      out.write("\r\n");
      out.write("\tif(headertext.length==0){\r\n");
      out.write("\t\talert('내용을 입력해주세요.');\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tif(headertext.length>20){\r\n");
      out.write("\t\talert('최대 20글자까지 가능합니다.');\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"setting-container\">\r\n");
      out.write("\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/setting/updateSet?mypage=\"");
      out.print(userLoggedIn.getUserId());
      out.write("\r\n");
      out.write("\t\tname=\"settingUpdateFrm\" id=\"settingUpdateFrm\" method=\"post\"  enctype=\"multipart/form-data\"\r\n");
      out.write("\t><input type=\"hidden\" name=\"setName\" value=\"");
      out.print(userLoggedIn.getUserId());
      out.write("\"/>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th><span class=\"sectionTitle\">프로필 수정</span></th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"sectionContent\">닉네임 \r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"SmodifyNick\" id=\"SmodifyNick\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"");
      out.print(profile.getProfileUserNickname());
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"sectionContent\" id=\"profileSection\">프로필 이미지\r\n");
      out.write("\t\t\t\t\t\t\t <img src='");
      out.print(request.getContextPath());
      out.write("/upload/profile/");
      out.print(profile.getProfileRenamedFilename());
      out.write("'\r\n");
      out.write("\t\t\t\t\t\t\t\tclass='header-profile-circle' width='40' height='40' />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"file\" name=\"SmodifyProfile\" id=\"SmodifyProfile\" class=\"btn btn-outline-secondary\"/> <br />\r\n");
      out.write("\t\t\t\t\t\t\t  <span id=\"fname\"> \r\n");
      out.write("\t\t\t\t\t \t\t ");
      out.print(profile.getProfileOriginalFilename()!=null? profile.getProfileRenamedFilename():"");
      out.write("\r\n");
      out.write("\t\t\t\t\t  \t\t</span>\r\n");
      out.write("\t\t\t\t\t   \t\t");
if(profile.getProfileOriginalFilename()!=null){ 
      out.write("<br /> \r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"delFile\" id=\"delFile\" /> \r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"delFile\">첨부파일삭제</label>\r\n");
      out.write("\t\t\t\t\t\t\t ");
 } 
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"oldprofileOName\" value=\"");
      out.print(profile.getProfileOriginalFilename()!=null?profile.getProfileOriginalFilename():"");
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"oldprofileRName\" value=\"");
      out.print(profile.getProfileRenamedFilename()!=null?profile.getProfileRenamedFilename():"");
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t<tr style='width:510px;'>\r\n");
      out.write("\t\t\t\t\t\t\t<th class=\"sectionTitle\" style='width:510px;'>레이아웃</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr style='width:510px;'>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"sectionContent\" style='width:510px;'>\r\n");
      out.write("\t\t\t\t\t\t\t\t헤더 텍스트\r\n");
      out.write("\t\t\t\t\t\t\t\t");
if(profile.getHeaderText() !=null){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" name=\"SmodifyText\" onclick='headerTextModify();' id=\"SmodifyText\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue='");
      out.print(profile.getHeaderText());
      out.write("' style=\"width:300px\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
} else{
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" name=\"SmodifyText\" onclick='headerTextModify();' id=\"SmodifyText\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue='텍스트를 바꿔주세요!(20자 이내)' style=\"width:300px\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
} 
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr style='width:510px;'>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"sectionContent\" style='width:510px;'>헤더 이미지 <img\r\n");
      out.write("\t\t\t\t\t\t\t\tsrc='");
      out.print(request.getContextPath());
      out.write("/upload/profile/");
      out.print(profile.getHeaderRenamedFilename());
      out.write("'\r\n");
      out.write("\t\t\t\t\t\t\t\tclass='header-profile' width='40' height='40' /> \r\n");
      out.write("\t\t\t\t\t\t\t <input type=\"file\" name=\"SmodifyHeader\" id=\"SmodifyHeader\" />\r\n");
      out.write("\t\t\t\t\t\t\t <span id=\"fname\"> \r\n");
      out.write("\t\t\t\t\t \t\t ");
      out.print(profile.getHeaderOriginalFilename()!=null? profile.getHeaderRenamedFilename():"");
      out.write("\r\n");
      out.write("\t\t\t\t\t  \t\t</span> ");
      out.write("\r\n");
      out.write("\t\t\t\t\t   \t\t");
if(profile.getHeaderOriginalFilename()!=null){ 
      out.write("<br /> \r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"delFile\" id=\"delFile\" /> \r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"delFile\">첨부파일삭제</label>\r\n");
      out.write("\t\t\t\t\t\t\t ");
 } 
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"oldHeaderOName\" value=\"");
      out.print(profile.getProfileOriginalFilename()!=null?profile.getProfileOriginalFilename():"");
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"oldHeaderRName\" value=\"");
      out.print(profile.getHeaderRenamedFilename()!=null?profile.getProfileRenamedFilename():"");
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr style='width:510px;'>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"sectionContent\" style='width:510px; padding: 10px;'>테마 \r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"radio\" value=\"#fec503\"  name=\"themaColor\"  id=\"themaColor\" class=\"orange\" style=\"margin: 0px 5px;\"\r\n");
      out.write("\t\t\t\t\t\t\t");
 if(profile.getThemeColor() == null){
      out.write("checked");
}
      out.write("/>기본\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"radio\" value=\"red\"  name=\"themaColor\"   id=\"themaColor\" class=\"red\" style=\"margin: 0px 5px;\"\r\n");
      out.write("\t\t\t\t\t\t\t ");
 if("red".equals(profile.getThemeColor())){
      out.write("checked");
}
      out.write("/>빨강\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"radio\" value=\"#007bff\"  name=\"themaColor\"   id=\"themaColor\" class=\"red\" style=\"margin: 0px 5px;\"\r\n");
      out.write("\t\t\t\t\t\t\t ");
 if("#007bff".equals(profile.getThemeColor())){
      out.write("checked");
}
      out.write("/>파랑\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"radio\" value=\"green\"  name=\"themaColor\"   id=\"themaColor\" class=\"red\" style=\"margin: 0px 5px;\"\r\n");
      out.write("\t\t\t\t\t\t\t ");
 if("green".equals(profile.getThemeColor())){
      out.write("checked");
}
      out.write("/>초록\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<tr style='width:510px;'>\r\n");
      out.write("\t\t\t\t\t\t\t<th colspan=\"2\"><input type=\"submit\" class=\"btn btn-outline-warning\" value=\"변경하기\"/></th>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th class=\"sectionTitle\">블랙리스트 \r\n");
      out.write("\t\t\t\t</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr><td class=\"sectionContent\">\r\n");
      out.write("\t\t\t\t<div class=\"BlackListContainer\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t<table class=\"blackList\" id=\"blackList\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$(\"[name=SmodifyHeader]\").change(function(){\r\n");
      out.write("\t\tconsole.log($(this).val());\r\n");
      out.write("\t\t\t//사용자가 파일선택한경우 \r\n");
      out.write("\t\t\tif(($this).val() != \"\"){\r\n");
      out.write("\t\t\t\t$(\"#fname\").hide(); \r\n");
      out.write("\t\t\t\t$(\"#delFile\").hide().next().hide();\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$(\"#fname\").show();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#delFile\").show().next().show();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t$(\"[name=SmodifyProfile]\").change(function(){\r\n");
      out.write("\t\tconsole.log($(this).val());\r\n");
      out.write("\t\t\t//사용자가 파일선택한경우 \r\n");
      out.write("\t\t\tif(($this).val() != \"\"){\r\n");
      out.write("\t\t\t\t$(\"#fname\").hide(); \r\n");
      out.write("\t\t\t\t$(\"#delFile\").hide().next().hide();\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$(\"#fname\").show();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#delFile\").show().next().show();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
